
@c Extracted automatically from ../jitplus/jit-plus-context.cpp - DO NOT EDIT


The @code{jit_context} class provides a C++ counterpart to the
C @code{jit_context_t} type.  @xref{Initialization}, for more
information on creating and managing contexts.


@defop Constructor jit_context jit_context ()
Construct a new JIT context.  This is equivalent to calling
@code{jit_context_create} in the C API.  The raw C context is
destroyed when the @code{jit_context} object is destructed.
@end defop

@defop Constructor jit_context jit_context (jit_context_t @var{context})
Construct a new JIT context by wrapping up an existing raw C context.
This is useful for importing a context from third party C code
into a program that prefers to use C++.

When you use this form of construction, @code{jit_context_destroy}
will not be called on the context when the @code{jit_context}
object is destructed.  You will need to arrange for that manually.
@end defop

@defop Destructor jit_context ~jit_context ()
Destruct a JIT context.
@end defop

@deftypemethod jit_context void build_start ()
Start an explicit build process.  Not needed if you will be using
on-demand compilation.
@end deftypemethod

@deftypemethod jit_context void build_end ()
End an explicit build process.
@end deftypemethod

@deftypemethod jit_context jit_context_t raw () const
Get the raw C context pointer that underlies this object.
@end deftypemethod

